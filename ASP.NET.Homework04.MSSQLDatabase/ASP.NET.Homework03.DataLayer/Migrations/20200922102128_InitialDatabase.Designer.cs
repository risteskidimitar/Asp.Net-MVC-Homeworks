// <auto-generated />
using ASP.NET.Homework03.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASP.NET.Homework03.DataLayer.Migrations
{
    [DbContext(typeof(MovieAppContext))]
    [Migration("20200922102128_InitialDatabase")]
    partial class InitialDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASP.NET.Homework03.DataLayer.Domain.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Duration");

                    b.Property<int>("Genre");

                    b.Property<bool>("HasMacedonianSubtitle");

                    b.Property<string>("Link");

                    b.Property<double>("Price");

                    b.Property<float>("Rating");

                    b.Property<int>("ReleaseDate");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Movie");

                    b.HasData(
                        new { Id = 1, Duration = 144, Genre = 1, HasMacedonianSubtitle = true, Link = "https://www.imdb.com/title/tt0381061/?ref_=nv_sr_srsg_3", Price = 300.0, Rating = 8f, ReleaseDate = 2006, Title = "Casino Royale" },
                        new { Id = 2, Duration = 130, Genre = 0, HasMacedonianSubtitle = false, Link = "https://www.imdb.com/title/tt0482571/?ref_=fn_al_tt_1", Price = 250.0, Rating = 8.5f, ReleaseDate = 2006, Title = "The Prestige" },
                        new { Id = 3, Duration = 169, Genre = 2, HasMacedonianSubtitle = true, Link = "https://www.imdb.com/title/tt0816692/?ref_=fn_al_tt_1", Price = 350.0, Rating = 8.6f, ReleaseDate = 2006, Title = "Interstellar" }
                    );
                });

            modelBuilder.Entity("ASP.NET.Homework03.DataLayer.Domain.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MovieId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new { Id = 1, MovieId = 3, UserId = 1 },
                        new { Id = 2, MovieId = 3, UserId = 2 },
                        new { Id = 3, MovieId = 1, UserId = 2 }
                    );
                });

            modelBuilder.Entity("ASP.NET.Homework03.DataLayer.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<long>("Phone");

                    b.Property<int>("TypeOfUser");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new { Id = 1, Email = "risteski.dimitar@gmail.com", FirstName = "Dimitar", LastName = "Risteski", Phone = 78123456L, TypeOfUser = 1 },
                        new { Id = 2, Email = "bob@yahoo.com", FirstName = "Bob", LastName = "Bobsky", Phone = 80012312345L, TypeOfUser = 0 }
                    );
                });

            modelBuilder.Entity("ASP.NET.Homework03.DataLayer.Domain.OrderDetails", b =>
                {
                    b.HasOne("ASP.NET.Homework03.DataLayer.Domain.Movie", "Movie")
                        .WithMany("Orders")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ASP.NET.Homework03.DataLayer.Domain.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
